// Code from by inigo quilez - iq/2016
// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.
// https://www.shadertoy.com/view/4ttSWf

//==========================================================================================
// hashes
//==========================================================================================

float hash1(float n) {
    return frac( n*17.0*frac( n*0.3183099 ) );
}

//==========================================================================================
// noises
//==========================================================================================

float noise( in float3 x )
{
    float3 p = floor(x);
    float3 w = frac(x);
    
    float3 u = w*w*w*(w*(w*6.0-15.0)+10.0);
    
    float n = p.x + 317.0*p.y + 157.0*p.z;
    
    float a = hash1(n+0.0);
    float b = hash1(n+1.0);
    float c = hash1(n+317.0);
    float d = hash1(n+318.0);
    float e = hash1(n+157.0);
	float f = hash1(n+158.0);
    float g = hash1(n+474.0);
    float h = hash1(n+475.0);

    float k0 =   a;
    float k1 =   b - a;
    float k2 =   c - a;
    float k3 =   e - a;
    float k4 =   a - b - c + d;
    float k5 =   a - c - e + g;
    float k6 =   a - b - e + f;
    float k7 = - a + b + c - d + e - f - g + h;

    return -1.0+2.0*(k0 + k1*u.x + k2*u.y + k3*u.z + k4*u.x*u.y + k5*u.y*u.z + k6*u.z*u.x + k7*u.x*u.y*u.z);
}

//==========================================================================================
// fbm constructions
//==========================================================================================

float fbm_4(in float3 x) {
	static const float3x3 m3 =
		float3x3( 0.00,  0.80,  0.60,
		         -0.80,  0.36, -0.48,
		         -0.60, -0.48,  0.64 );

    float f = 2.0;
    float s = 0.5;
    float a = 0.0;
    float b = 0.5;
    for(int i=0; i<4; i++) {
        float n = noise(x);
        a += b*n;
        b *= s;
        x = f*mul(m3, x);
    }
	return a;
}
